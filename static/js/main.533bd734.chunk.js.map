{"version":3,"sources":["api/tabs.ts","components/VisibleTab/VisibleTab.tsx","components/PageNavLink/PageNavLink.tsx","components/TabLink/TabLink.tsx","components/TabsPage/TabsPage.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["tabs","id","title","content","VisibleTab","selectedTab","className","PageNavLink","to","text","isActive","cn","TabLink","selectedTabId","map","tab","classNames","TabsPage","useParams","tabId","find","NavBar","App","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"gOAAaA,EAAO,CAClB,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gB,OCI7BC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACzC,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAEGA,EAAYF,QAEZ,yB,iBCJKI,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAC1C,cAAC,IAAD,CACED,GAAIA,EACJF,UAAW,gBAAGI,EAAH,EAAGA,SAAH,OACTC,IAAG,cAAe,CAAE,YAAaD,KAHrC,SAMGD,KCPQG,EAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAH,OAChC,qBAAKP,UAAU,gBAAf,SACE,6BACGN,EAAKc,KAAI,SAAAC,GAAG,OACX,oBACE,UAAQ,MAERT,UAAWU,IAAW,CAAE,YAAaD,EAAId,KAAOY,IAHlD,SAKE,cAAC,EAAD,CAAaL,GAAE,gBAAWO,EAAId,IAAMQ,KAAMM,EAAIb,SAHzCa,EAAId,YCTNgB,EAAqB,WAChC,MAAuCC,cAA/BC,MAAON,OAAf,MAA+B,IAA/B,EAEMR,EAAcL,EAAKoB,MAAK,SAAAL,GAAG,OAAIA,EAAId,KAAOY,MAAkB,KAElE,OACE,qCACE,oBAAIP,UAAU,QAAd,uBAEA,cAAC,EAAD,CAASO,cAAeA,IAExB,cAAC,EAAD,CAAYR,YAAaA,QCdlBgB,EAAmB,kBAC9B,qBACEf,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaE,GAAG,IAAIC,KAAK,SACzB,cAAC,EAAD,CAAaD,GAAG,QAAQC,KAAK,iBCCxBa,EAAgB,kBAC3B,qCACE,cAAC,EAAD,IACA,qBAAKhB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEiB,KAAK,IACLC,QAAS,oBAAIlB,UAAU,QAAd,yBAGX,cAAC,IAAD,CAAOiB,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUhB,GAAG,IAAIiB,SAAO,MAErD,eAAC,IAAD,CAAOF,KAAK,QAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAGhC,cAAC,IAAD,CACED,KAAK,IACLC,QAAS,oBAAIlB,UAAU,QAAd,yCC5BrBqB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.533bd734.chunk.js","sourcesContent":["export const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n","import React from 'react';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  selectedTab: Tab | null,\n};\n\nexport const VisibleTab: React.FC<Props> = ({ selectedTab }) => (\n  <div className=\"block\" data-cy=\"TabContent\">\n    {selectedTab\n      ? (\n        selectedTab.content\n      ) : (\n        'Please select a tab'\n      )}\n  </div>\n);\n","import cn from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => (\n      cn('navbar-item', { 'is-active': isActive })\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { tabs } from '../../api/tabs';\nimport { PageNavLink } from '../PageNavLink';\n\ntype Props = {\n  selectedTabId: string,\n};\n\nexport const TabLink: FC<Props> = ({ selectedTabId }) => (\n  <div className=\"tabs is-boxed\">\n    <ul>\n      {tabs.map(tab => (\n        <li\n          data-cy=\"Tab\"\n          key={tab.id}\n          className={classNames({ 'is-active': tab.id === selectedTabId })}\n        >\n          <PageNavLink to={`/tabs/${tab.id}`} text={tab.title} />\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { tabs } from '../../api/tabs';\nimport { VisibleTab } from '../VisibleTab';\nimport { TabLink } from '../TabLink';\n\nexport const TabsPage: React.FC = () => {\n  const { tabId: selectedTabId = '0' } = useParams();\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || null;\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <TabLink selectedTabId={selectedTabId} />\n\n      <VisibleTab selectedTab={selectedTab} />\n    </>\n  );\n};\n","import React from 'react';\nimport { PageNavLink } from '../PageNavLink';\n\nexport const NavBar: React.FC = () => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/tabs\" text=\"Tabs\" />\n      </div>\n    </div>\n  </nav>\n);\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport React from 'react';\nimport {\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport { TabsPage } from './components/TabsPage';\nimport { NavBar } from './components/NavBar';\n\nexport const App: React.FC = () => (\n  <>\n    <NavBar />\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<h1 className=\"title\">Home page</h1>}\n          />\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/tabs\">\n            <Route index element={<TabsPage />} />\n            <Route path=\":tabId\" element={<TabsPage />} />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}